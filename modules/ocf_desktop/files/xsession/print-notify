#!/usr/bin/env python3
import redis
import functools

from gi.repository import Notify


get_redis_connection = functools.partial(redis.StrictRedis,
                                        host='hozer-65',
                                        port=6379,
                                        db=0,
                                        password=None
                                        )

def publish(host, password, channel, message):
    rc = get_redis_connection(host=host, password=password)
    rc.publish(channel, message)

def subscribe(host, password, *channels):
    rc = get_redis_connection(host=host, password=password)
    sub = rc.pubsub()
    sub.subscribe(channel for channel in channels)
    return sub

from ocflib.misc.whoami import current_user

NOTIFICATION_ICON = '/opt/share/xsession/images/ocf-color.png'

BROKER_AUTH = 'password' #TODO

def main():
    Notify.init('OCF')
    s = subscribe('hozer-65', BROKER_AUTH, 'printing')
    while True:
        message = s.get_message()
        if message and message['type'] == 'message':
            print(message)
            user, status_message = (message['data'].decode(encoding='UTF-8')).split("\n")
            if user == current_user():
                Notify.Notification.new('Printing Status', status_message, NOTIFICATION_ICON).show()

if __name__ == '__main__':
    main()
